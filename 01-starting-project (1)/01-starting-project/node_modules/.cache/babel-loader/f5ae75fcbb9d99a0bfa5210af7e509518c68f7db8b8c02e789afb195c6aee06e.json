{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\React\\\\01-starting-project (1)\\\\01-starting-project\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst emailReducer = (state, action) => {\n  // why outside , because we are not communicating the value's inside this function\n  if (action.type === 'USER_INPUT') {\n    return {\n      value: action.val,\n      isValid: action.val.includes('@')\n    };\n  }\n  if (action.type === 'INPUT_BLUR') {\n    return {\n      value: state.value,\n      isValid: state.value.includes('@')\n    }; // jo last value thi vo utha lega\n  }\n\n  return {\n    value: '',\n    isValid: false\n  };\n};\nconst Login = props => {\n  _s();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  // use reducer -> like enteremail and email valid work on same \n\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: '',\n    isValid: true\n  }); // or , initial state t\n\n  // \n  const [passState, dispatchPass] = useReducer(passReducer, {\n    value: ' ',\n    isValid: true\n  });\n\n  // wheneven passward and name changes it should inVoke\n\n  useEffect(() => {\n    // now whenever i am typing it is rendering and send the load to server , use settime out\n    // settimeout return the identfier of time\n    const identfier = setTimeout(() => {\n      console.log(\"checking\");\n      setFormIsValid(emailState.isValid && passState.value.trim().length > 6);\n    }, 500);\n    // we can rturn \n\n    return () => {\n      console.log(\"cleanup\");\n      clearTimeout(identfier); //first it will clean time of prev then move formard , so if u write very fast ti will not time the prev one\n    }; // clean up function expect for the first time before exectuing above \n    // this statement runs first\n  }, [emailState.isValid, passState.value]); // it dependece on  \n\n  // empty means at refresh time it will render also\n\n  const emailChangeHandler = event => {\n    // imp->\n    dispatchEmail({\n      type: 'USER_INPUT',\n      val: event.target.value\n    });\n  };\n  const passwordChangeHandler = event => {\n    dis;\n  };\n  const validateEmailHandler = () => {\n    dispatchEmail({\n      type: 'INPUT_BLUR'\n    }); // we need just type\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordIsValid === false ? classes.invalid : ''}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: enteredPassword,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"j6szblP6eDq9QrcRmPqSKIGsiqg=\");\n_c = Login;\nexport default Login;\n\n/* useReduce->\n\nconst reducer = (state , action) =>{\n\n}\n\nconst [state , dispatch] = useReduces(reducer , initialState); // state-> current state\ndistpatch will perform the action \n\nfollow abover expample\n\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","Card","classes","Button","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","includes","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","dispatchEmail","passState","dispatchPass","passReducer","identfier","setTimeout","console","log","trim","length","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","dis","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","className","login","children","onSubmit","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","id","onChange","onBlur","actions","btn","disabled","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/React/01-starting-project (1)/01-starting-project/src/components/Login/Login.js"],"sourcesContent":["import React, { useState  , useEffect , useReducer} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\n\n\nconst emailReducer = (state , action)=>{ // why outside , because we are not communicating the value's inside this function\n  if(action.type=== 'USER_INPUT'){\n    return {value : action.val , isValid : action.val.includes('@')};\n  }\n  if(action.type === 'INPUT_BLUR'){\n    return {value: state.value , isValid :  state.value.includes('@')} ; // jo last value thi vo utha lega\n  }\n  \n  return {value : '' , isValid : false};\n}; \n\nconst Login = (props) => {\n \n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n\n// use reducer -> like enteremail and email valid work on same \n\nconst [emailState , dispatchEmail] = useReducer(emailReducer ,\n  \n  {\n    value: '' , isValid : true,\n  }\n  \n  ); // or , initial state t\n\n\n// \nconst [passState , dispatchPass] = useReducer(passReducer , {\n  value : ' ' ,  isValid : true ,\n})\n\n\n\n\n\n\n\n\n\n\n\n   // wheneven passward and name changes it should inVoke\n  \n  useEffect(()=>{\n\n    // now whenever i am typing it is rendering and send the load to server , use settime out\n  // settimeout return the identfier of time\n const identfier =   setTimeout(()=>{\n    console.log(\"checking\");\n    setFormIsValid(\n       emailState.isValid && passState.value.trim().length > 6\n    );\n\n    } , 500);\n    // we can rturn \n    \n    return ()=>{\n      \n       console.log(\"cleanup\");\n       clearTimeout(identfier); //first it will clean time of prev then move formard , so if u write very fast ti will not time the prev one\n    }; // clean up function expect for the first time before exectuing above \n    // this statement runs first\n  } , [emailState.isValid , passState.value]);   // it dependece on  \n\n  // empty means at refresh time it will render also\n\n\n  const emailChangeHandler = (event) => {\n    // imp->\n    dispatchEmail({type:'USER_INPUT' , val : event.target.value});\n    \n  };\n\n  const passwordChangeHandler = (event) => {\n     dis\n\n  };\n\n  const validateEmailHandler = () => {\n    dispatchEmail({type:'INPUT_BLUR' }); // we need just type\n  };\n\n  const validatePasswordHandler = () => {\n    setPasswordIsValid(enteredPassword.trim().length > 6);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    props.onLogin(emailState.value, enteredPassword);\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <div\n          className={`${classes.control} ${\n            emailState.isValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"email\">E-Mail</label>\n          <input\n            type=\"email\"\n            id=\"email\"\n            value={emailState.value}\n            onChange={emailChangeHandler}\n            onBlur={validateEmailHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${\n            passwordIsValid === false ? classes.invalid : ''\n          }`}\n        >\n          <label htmlFor=\"password\">Password</label>\n          <input\n            type=\"password\"\n            id=\"password\"\n            value={enteredPassword}\n            onChange={passwordChangeHandler}\n            onBlur={validatePasswordHandler}\n          />\n        </div>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn} disabled={!formIsValid}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n\n\n\n/* useReduce->\n\nconst reducer = (state , action) =>{\n\n}\n\nconst [state , dispatch] = useReduces(reducer , initialState); // state-> current state\ndistpatch will perform the action \n\nfollow abover expample\n\n\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}