{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\React\\\\react-learn\\\\src\\\\Expense.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport \"./ExpenseItems.css\";\nimport ExpensesFilter from \"./FilterExpense/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Expense(props) {\n  _s();\n  const [newYear, setnewYear] = useState(\"2020\");\n  const clickYear = getClickedYear => {\n    setnewYear(getClickedYear);\n    console.log(getClickedYear, \"agaya expensese me \");\n  };\n\n  //\n  const filteredArray = props.a.filter(ex => {\n    return ex.date.getFullYear().toString() === newYear;\n  });\n  // coditional statements --->>>>\n\n  let newFilterArray;\n  if (filteredArray.length === 0) newFilterArray = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No Expense Data\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 21\n  }, this);else {\n    filteredArray.map(ex => {\n      return /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        dat: ex.date,\n        title: ex.title,\n        amount: ex.amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n      defaultYear: newYear,\n      onClickYear: clickYear\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"smallContainer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(Expense, \"TpzAoE6/81XvoV50HhzvrPB+X7k=\");\n_c = Expense;\nexport default Expense;\nvar _c;\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"names":["React","useState","ExpenseItem","ExpensesFilter","jsxDEV","_jsxDEV","Expense","props","_s","newYear","setnewYear","clickYear","getClickedYear","console","log","filteredArray","a","filter","ex","date","getFullYear","toString","newFilterArray","length","children","fileName","_jsxFileName","lineNumber","columnNumber","map","dat","title","amount","defaultYear","onClickYear","className","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/React/react-learn/src/Expense.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport \"./ExpenseItems.css\";\r\nimport ExpensesFilter from \"./FilterExpense/ExpensesFilter\";\r\n\r\nfunction Expense(props) {\r\n  const [newYear, setnewYear] = useState(\"2020\");\r\n  const clickYear = (getClickedYear) => {\r\n    setnewYear(getClickedYear);\r\n    console.log(getClickedYear, \"agaya expensese me \");\r\n  };\r\n\r\n  //\r\n  const filteredArray = props.a.filter((ex)=>{\r\n    return ex.date.getFullYear().toString() === newYear ;\r\n  })\r\n  // coditional statements --->>>>\r\n\r\n  let newFilterArray ;\r\n  if(filteredArray.length === 0) \r\n   newFilterArray = <p>No Expense Data</p>\r\n  else{\r\n    filteredArray.map(ex=>{\r\n      return <ExpenseItem dat={ex.date} title={ex.title} amount={ex.amount}></ExpenseItem>\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <ExpensesFilter\r\n        defaultYear={newYear}\r\n        onClickYear={clickYear}\r\n      ></ExpensesFilter>\r\n      <div className=\"smallContainer\">\r\n        {/* first method to do this-> use ternary instead of if else because of curly bractes  */}\r\n        {/* {\r\n          filteredArray.length === 0 ? <p>No Expense Found</p> : (\r\n            filteredArray.map((ex)=>{\r\n             return <ExpenseItem dat={ex.date} title={ex.title} amount={ex.amount}></ExpenseItem>\r\n            })\r\n          )\r\n        } */}\r\n\r\n        {/* 2nd method use abuse js -> when we && it return the  */}\r\n        {/* {filteredArray.length === 0 && <p>No Expense Found</p>}\r\n        {filteredArray.length > 0 && \r\n          filteredArray.map(ex=>{\r\n            return <ExpenseItem dat={ex.date} title={ex.title} amount={ex.amount}></ExpenseItem>\r\n          })\r\n        } */}\r\n\r\n        {/* best way to do it */}\r\n        \r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,oBAAoB;AAC3B,OAAOC,cAAc,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAC9C,MAAMU,SAAS,GAAIC,cAAc,IAAK;IACpCF,UAAU,CAACE,cAAc,CAAC;IAC1BC,OAAO,CAACC,GAAG,CAACF,cAAc,EAAE,qBAAqB,CAAC;EACpD,CAAC;;EAED;EACA,MAAMG,aAAa,GAAGR,KAAK,CAACS,CAAC,CAACC,MAAM,CAAEC,EAAE,IAAG;IACzC,OAAOA,EAAE,CAACC,IAAI,CAACC,WAAW,EAAE,CAACC,QAAQ,EAAE,KAAKZ,OAAO;EACrD,CAAC,CAAC;EACF;;EAEA,IAAIa,cAAc;EAClB,IAAGP,aAAa,CAACQ,MAAM,KAAK,CAAC,EAC5BD,cAAc,gBAAGjB,OAAA;IAAAmB,QAAA,EAAG;EAAe;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAI,MACpC;IACFb,aAAa,CAACc,GAAG,CAACX,EAAE,IAAE;MACpB,oBAAOb,OAAA,CAACH,WAAW;QAAC4B,GAAG,EAAEZ,EAAE,CAACC,IAAK;QAACY,KAAK,EAAEb,EAAE,CAACa,KAAM;QAACC,MAAM,EAAEd,EAAE,CAACc;MAAO;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAe;IACtF,CAAC,CAAC;EACJ;EAEA,oBACEvB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA,CAACF,cAAc;MACb8B,WAAW,EAAExB,OAAQ;MACrByB,WAAW,EAAEvB;IAAU;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,eAClBvB,OAAA;MAAK8B,SAAS,EAAC;IAAgB;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAqBzB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV;AAACpB,EAAA,CApDQF,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAsDhB,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}