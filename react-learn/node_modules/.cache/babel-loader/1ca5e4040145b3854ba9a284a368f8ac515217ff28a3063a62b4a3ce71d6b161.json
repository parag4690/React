{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sharm\\\\OneDrive\\\\Desktop\\\\React\\\\react-learn\\\\src\\\\NewExpense\\\\ExpenseForm.js\";\nimport React, { useState } from \"react\";\nimport ChangeExp from \"./ChangeExp\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  // const [titleChange , setTitleChange] = useState('');\n\n  // const titleChangeHandler = (event)=>{\n\n  //     setTitleChange(event.target.value);\n\n  // } \n\n  // // amount\n\n  // const [amountChange , setAmountChange] = useState('');\n  // const amountChangeHandler = (event) =>{\n  //     setAmountChange(event.target.value);\n  // }\n\n  // // set date\n\n  // const [dateChange , setDateChange] = useState('');\n  // const dateChangeHandler = (event) => {\n  //     setDateChange(event.target.value);\n  // }\n\n  // submit envoke button in form // but it will referesh the page but we save this\n\n  const submitHandler = event => {\n    event.preventDefault(); //\n\n    // now update in form \n\n    const expenseDate = {\n      // this object added inside form submition\n      date: new Date(dateChange),\n      title: titleChange,\n      amount: amountChange\n    };\n    //  console.log(expenseDate);\n\n    props.onSaveExpense(expenseDate);\n\n    // now when form is submit i want to things to clear -> two way binding\n    setTitleChange('');\n    setAmountChange('');\n    setDateChange('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(ChangeExp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","ChangeExp","jsxDEV","_jsxDEV","ExpenseForm","props","submitHandler","event","preventDefault","expenseDate","date","Date","dateChange","title","titleChange","amount","amountChange","onSaveExpense","setTitleChange","setAmountChange","setDateChange","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","_c","$RefreshReg$"],"sources":["C:/Users/sharm/OneDrive/Desktop/React/react-learn/src/NewExpense/ExpenseForm.js"],"sourcesContent":["import React , {useState} from \"react\";\r\nimport ChangeExp from \"./ChangeExp\";\r\nimport './ExpenseForm.css'\r\n\r\nconst ExpenseForm = (props) =>{\r\n    \r\n    // const [titleChange , setTitleChange] = useState('');\r\n\r\n    // const titleChangeHandler = (event)=>{\r\n\r\n    //     setTitleChange(event.target.value);\r\n\r\n    // } \r\n\r\n    // // amount\r\n\r\n    // const [amountChange , setAmountChange] = useState('');\r\n    // const amountChangeHandler = (event) =>{\r\n    //     setAmountChange(event.target.value);\r\n    // }\r\n\r\n    // // set date\r\n\r\n    // const [dateChange , setDateChange] = useState('');\r\n    // const dateChangeHandler = (event) => {\r\n    //     setDateChange(event.target.value);\r\n    // }\r\n    \r\n    // submit envoke button in form // but it will referesh the page but we save this\r\n\r\n    const submitHandler = (event) =>{\r\n       event.preventDefault(); //\r\n\r\n       // now update in form \r\n\r\n       const expenseDate = { // this object added inside form submition\r\n            date : new Date(dateChange),\r\n            title : titleChange , \r\n            amount : amountChange \r\n       }\r\n      //  console.log(expenseDate);\r\n\r\n       props.onSaveExpense(expenseDate);\r\n\r\n       // now when form is submit i want to things to clear -> two way binding\r\n       setTitleChange('');\r\n       setAmountChange('');\r\n       setDateChange('');\r\n\r\n    }\r\n\r\n     return (\r\n        <form onSubmit={submitHandler}>\r\n            {/* include -> title , date , amount */}\r\n            <ChangeExp/>\r\n\r\n            {/* button */}\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">Add Expense</button>\r\n            </div>\r\n        </form>\r\n     );\r\n}\r\n\r\nexport default ExpenseForm;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AACtC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAO,mBAAmB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAW,GAAIC,KAAK,IAAI;EAE1B;;EAEA;;EAEA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA,MAAMC,aAAa,GAAIC,KAAK,IAAI;IAC7BA,KAAK,CAACC,cAAc,EAAE,CAAC,CAAC;;IAExB;;IAEA,MAAMC,WAAW,GAAG;MAAE;MACjBC,IAAI,EAAG,IAAIC,IAAI,CAACC,UAAU,CAAC;MAC3BC,KAAK,EAAGC,WAAW;MACnBC,MAAM,EAAGC;IACd,CAAC;IACF;;IAECX,KAAK,CAACY,aAAa,CAACR,WAAW,CAAC;;IAEhC;IACAS,cAAc,CAAC,EAAE,CAAC;IAClBC,eAAe,CAAC,EAAE,CAAC;IACnBC,aAAa,CAAC,EAAE,CAAC;EAEpB,CAAC;EAEA,oBACGjB,OAAA;IAAMkB,QAAQ,EAAEf,aAAc;IAAAgB,QAAA,gBAE1BnB,OAAA,CAACF,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAGZvB,OAAA;MAAKwB,SAAS,EAAC,sBAAsB;MAAAL,QAAA,eACjCnB,OAAA;QAAQyB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACH;AAEf,CAAC;AAAAG,EAAA,GA1DKzB,WAAW;AA4DjB,eAAeA,WAAW;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}